package io.lpgph.auth.oauth2.authentication.password;

import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer;
import org.springframework.security.oauth2.provider.ClientDetailsService;
import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;

/** see https://docs.spring.io/spring-security/site/docs/current/reference/html5/#jc-custom-dsls */
public class PasswordAuthenticationSecurityConfig
    extends AbstractHttpConfigurer<PasswordAuthenticationSecurityConfig, HttpSecurity> {

  private final ClientDetailsService clientDetailsService;

  @Override
  public void init(HttpSecurity http) throws Exception {
    http.formLogin().disable();
    super.init(http);
  }

  @Override
  public void configure(HttpSecurity http) throws Exception {
    PasswordAuthenticationFilter filter = new PasswordAuthenticationFilter(clientDetailsService);
    // 设置AuthenticationManager
    filter.setAuthenticationManager(http.getSharedObject(AuthenticationManager.class));
    http.addFilterAfter(filter, UsernamePasswordAuthenticationFilter.class);
  }

  private PasswordAuthenticationSecurityConfig(ClientDetailsService clientDetailsService) {
    this.clientDetailsService = clientDetailsService;
  }

  public static PasswordAuthenticationSecurityConfig passLogin(
      ClientDetailsService clientDetailsService) {
    return new PasswordAuthenticationSecurityConfig(clientDetailsService);
  }
}
