plugins {
    id "java"
    id 'org.springframework.boot' version '2.4.1'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
}


group = "io.lpgph"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

//定义jar包版本号
ext {
    set('springCloudVersion', "2020.0.0-M6")
    set('springCloudAlibabaVersion', "2.2.3.RELEASE")

    compileJava.options.encoding = "UTF-8"
    compileTestJava.options.encoding = "UTF-8"
    javadoc.options.encoding = "UTF-8"
}


configurations {
    // spring热部署
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
//    implementation("org.springframework.boot:spring-boot-starter-web")

    implementation("org.springframework.boot:spring-boot-starter-webflux")
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'

    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config'
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery'
    implementation("org.springframework.boot:spring-boot-starter-actuator")

//    implementation 'org.springframework.cloud:spring-cloud-stream'
//    implementation 'org.springframework.cloud:spring-cloud-stream-binder-rabbit'
//    implementation 'com.alibaba.cloud:spring-cloud-stream-binder-rocketmq'
    implementation 'com.alibaba.cloud:spring-cloud-starter-stream-rocketmq'

    implementation 'com.google.guava:guava:29.0-jre'

    compileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")
    testAnnotationProcessor("org.projectlombok:lombok")
    testCompileOnly("org.projectlombok:lombok")

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation('org.springframework.boot:spring-boot-starter-test')
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
    }
}
configurations.all {
    resolutionStrategy.dependencySubstitution.all { dependency ->
        if (dependency.requested instanceof ModuleComponentSelector && dependency.requested.module == 'spring-boot-starter-logging') {
            dependency.useTarget("org.springframework.boot:spring-boot-starter-log4j2:$dependency.requested.version", 'Use Log4j2 instead of Logback')
        }
    }
}

test {
    useJUnitPlatform()
}

repositories {
    mavenLocal()
    maven { url 'https://maven.aliyun.com/repository/central' }
    maven { url 'https://maven.aliyun.com/repository/jcenter' }
    maven { url 'https://repo.spring.io/milestone' }
    mavenCentral()
    jcenter()
}
