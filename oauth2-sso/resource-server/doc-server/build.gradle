plugins {
    id "java"
    id "idea"
    id "eclipse"
    id 'maven-publish'
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.bmuschko.docker-spring-boot-application' version '6.6.1'
}
description = "Doc"

group = "io.lpgph"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

//定义jar包版本号
ext {
    compileJava.options.encoding = "UTF-8"
    compileTestJava.options.encoding = "UTF-8"
    javadoc.options.encoding = "UTF-8"
}

configurations {
    // spring热部署
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-webflux")
    implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.5.8'
    //##############################   spring boot   ##############################
    //监控
    implementation 'com.google.guava:guava:29.0-jre'

    compileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")
    testAnnotationProcessor("org.projectlombok:lombok")
    testCompileOnly("org.projectlombok:lombok")

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation 'io.projectreactor:reactor-test'
}
configurations.all {
    resolutionStrategy.dependencySubstitution.all { dependency ->
        if (dependency.requested instanceof ModuleComponentSelector && dependency.requested.module == 'spring-boot-starter-logging') {
            dependency.useTarget("org.springframework.boot:spring-boot-starter-log4j2:$dependency.requested.version", 'Use Log4j2 instead of Logback')
        }
    }
}

test {
    useJUnitPlatform()
}

repositories {
    mavenLocal()
}
