plugins {
    id 'java'
    id 'org.springframework.boot' version '2.4.0'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
}

description = "微服务服务网关和客户端结合 自动刷新token"

group = "io.lpgph"
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

sourceSets {
    main {
        java {
            srcDir("src/main/java") // 指定源码目录
        }
        resources {
            srcDirs = ["src/main/resources", "src/main/java"] //指定资源目录
            includes = ["**/*"]
            excludes = ["**/*.java,**/*.kt"]
        }
    }
    test {
        java {
            srcDir("src/test/java") // 指定源码目录
        }
        resources {
            srcDirs = ["src/test/resources", "src/test/java"] //指定资源目录
            includes = ["**/*"]
            excludes = ["**/*.java,**/*.kt"]
        }
    }
}

ext {
    set('springCloudVersion', "2020.0.0-M6")
    set('springCloudAlibabaVersion', "2.2.3.RELEASE")

    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'
    javadoc.options.encoding = 'UTF-8'
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-webflux")
    implementation("org.springframework.cloud:spring-cloud-starter-loadbalancer")

    implementation('org.springframework.cloud:spring-cloud-starter-gateway')
    implementation('org.springframework.boot:spring-boot-starter-oauth2-client')
    implementation('org.springframework.boot:spring-boot-starter-actuator')

    implementation("org.springframework.cloud:spring-cloud-starter-bootstrap")

    implementation("org.springframework.boot:spring-boot-starter-data-redis")
    implementation("org.springframework.session:spring-session-data-redis")

    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config'
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

//    //使用lombok 简化
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'

    testImplementation 'io.projectreactor:reactor-test'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
    }
}
configurations.all {
    resolutionStrategy.dependencySubstitution.all { dependency ->
        if (dependency.requested instanceof ModuleComponentSelector && dependency.requested.module == 'spring-boot-starter-logging') {
            dependency.useTarget("org.springframework.boot:spring-boot-starter-log4j2:$dependency.requested.version", 'Use Log4j2 instead of Logback')
        }
    }
}

test {
    useJUnitPlatform()
}

repositories {
    mavenLocal()
}