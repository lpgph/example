plugins {
    id 'org.springframework.boot' version '2.4.0'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

group = 'cc.dshui'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

ext {
    set("querydslVersion", "4.4.0")

    compileJava.options.encoding = "UTF-8"
    compileTestJava.options.encoding = "UTF-8"
    javadoc.options.encoding = "UTF-8"
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    testRuntimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation("org.springframework.boot:spring-boot-starter-log4j2")

    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'mysql:mysql-connector-java'

    implementation 'com.hankcs:hanlp:portable-1.7.8'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'

    implementation("org.springframework.boot:spring-boot-starter-data-jdbc")
//    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3"

    implementation("com.querydsl:querydsl-sql-codegen:${querydslVersion}")
    implementation("com.querydsl:querydsl-sql:${querydslVersion}")

    //自定义注解  映射配置文件
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}


configurations.all {
    resolutionStrategy.dependencySubstitution.all { dependency ->
        if (dependency.requested instanceof ModuleComponentSelector && dependency.requested.module == 'spring-boot-starter-logging') {
            dependency.useTarget("org.springframework.boot:spring-boot-starter-log4j2:$dependency.requested.version", 'Use Log4j2 instead of Logback')
        }
    }
}

test {
    useJUnitPlatform()
}
repositories {
    mavenLocal()
//        mavenCentral()
//        jcenter()
    maven { url 'https://maven.aliyun.com/repository/central' }
    maven { url 'https://maven.aliyun.com/repository/jcenter' }
    maven { url 'https://maven.aliyun.com/repository/releases' }
    maven { url 'https://maven.aliyun.com/repository/snapshots' }
    maven { url 'https://maven.aliyun.com/repository/spring' }
    maven { url 'https://repo.spring.io/milestone' }
}